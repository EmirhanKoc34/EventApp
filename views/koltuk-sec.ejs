<style>
    body {
        background-color: #f8f9fa;
        font-family: 'Segoe UI', sans-serif;
    }

    .seat {
        width: 70px;
        height: 70px;
        font-size: 0.9rem;
        font-weight: 600;
        line-height: 70px;
        padding: 0;
        border-radius: 8px;
        border: none;
        color: white;
        margin: 5px;
        transition: background-color 0.2s ease;
    }

    .available {
        background-color: #198754;
    }

    .selected {
        background-color: #0d6efd;
    }

    .unavailable {
        background-color: #dc3545;
        pointer-events: none;
    }

    .seat-row {
        display: flex;
        justify-content: center;
        flex-wrap: wrap;
    }

    .action-buttons {
        margin-top: 30px;
    }
</style>

<div class="container text-center">
    <h2 class="mb-4">
        <%= __('chooseseat') %>
    </h2>

    <form id="ticketForm">
        <div id="seat-grid" class="mb-4">
            <!-- Koltuklar burada oluşturulacak -->
        </div>

        <div class="action-buttons">
            <button type="submit" class="btn btn-success me-2">
                <%= __('confirm') %>
            </button>
            <a href="/" class="btn btn-secondary">
                <%= __('cancel') %>
            </a>
        </div>
    </form>
</div>

<script>
    const seatGrid = document.getElementById("seat-grid");
    const selected = [];
    const eventID = new URLSearchParams(window.location.search).get("eventID");

    if (!eventID) {
        alert("Etkinlik ID'si bulunamadı.");
    }

    async function fetchSeats() {
        try {
            const res = await fetch("/getSeats", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ event_ID: eventID })
            });

            if (!res.ok) {
                return alert("Koltuk verileri alınamadı.");
            }

            const seats = await res.json();

            if (!seats.length) {
                seatGrid.innerHTML = "<p>Bu etkinlik için tanımlı koltuk bulunamadı.</p>";
                return;
            }

            console.log("Gelen koltuklar:", seats);
            createGrid(seats);
        } catch (err) {
            alert("Bir hata oluştu: " + err.message);
        }
    }

    function createGrid(seats) {
        seatGrid.innerHTML = "";

        const rowDiv = document.createElement("div");
        rowDiv.className = "seat-row";

        seats.forEach(seat => {
            const seatID = seat.seats_ID || seat.seat_ID || seat.id; // Hangi adla geldiyse güvenli çekiyoruz

            if (!seatID) {
                console.error("Eksik koltuk verisi:", seat);
                return;
            }

            const btn = document.createElement("button");
            btn.type = "button";
            btn.className = "seat available";
            btn.textContent = seatID; // numara butonda yazacak

            btn.addEventListener("click", () => {
                if (btn.classList.contains("selected")) {
                    btn.classList.remove("selected");
                    selected.splice(selected.indexOf(seatID), 1);
                } else {
                    btn.classList.add("selected");
                    selected.push(seatID);
                }
            });

            rowDiv.appendChild(btn);
        });

        seatGrid.appendChild(rowDiv);
    }

    async function submitTickets(e) {
        e.preventDefault();

        if (!selected.length) {
            return alert("Lütfen en az bir koltuk seçiniz.");
        }

        try {
            for (const seatID of selected) {
                const res = await fetch("/sendTicket", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ seatID, eventID })
                });

                if (!res.ok) {
                    const errMsg = await res.text();
                    return alert(`Koltuk ${seatID} için bilet alınamadı: ${errMsg}`);
                }
            }

            alert("Biletler başarıyla alındı!");
            window.location.href = "/";
        } catch (err) {
            alert("Bilet gönderilirken hata oluştu: " + err.message);
        }
    }

    document.getElementById("ticketForm").addEventListener("submit", submitTickets);

    fetchSeats();
</script>